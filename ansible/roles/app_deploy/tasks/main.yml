---
- name: Create application directory
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/{{ project_name }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

- name: Copy docker-compose.yml
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/../../docker-compose.yml"
    dest: "/home/{{ ansible_user }}/{{ project_name }}/docker-compose.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'

- name: Create environment file from template
  ansible.builtin.template:
    src: env.j2
    dest: "/home/{{ ansible_user }}/{{ project_name }}/.env"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'

- name: Pull latest Docker image
  community.docker.docker_image:
    name: "{{ docker_image }}"
    tag: "{{ image_tag.split(':')[-1] }}"
    source: pull

- name: Stop and remove existing containers using Docker Compose V2
  ansible.builtin.shell:
    cmd: docker compose down
    chdir: "/home/{{ ansible_user }}/{{ project_name }}"
  ignore_errors: yes

- name: Start containers with Docker Compose V2 (without build)
  ansible.builtin.shell:
    cmd: docker compose up -d
    chdir: "/home/{{ ansible_user }}/{{ project_name }}"

- name: Wait for services to be ready
  ansible.builtin.wait_for:
    timeout: 60

- name: Check container status
  ansible.builtin.command:
    cmd: docker compose ps
    chdir: "/home/{{ ansible_user }}/{{ project_name }}"
  register: container_status

- name: Show container status
  ansible.builtin.debug:
    var: container_status.stdout_lines

- name: Check application health (with more lenient retry)
  ansible.builtin.uri:
    url: "http://localhost:{{ app_port }}/"
    method: GET
    status_code: 200,302,404  # Accept multiple status codes
    timeout: 30
  register: health_check
  until: health_check.status in [200, 302, 404]
  retries: 1
  delay: 5
  ignore_errors: yes

- name: Show application logs if health check failed
  ansible.builtin.command:
    cmd: docker compose logs web_services
    chdir: "/home/{{ ansible_user }}/{{ project_name }}"
  when: health_check is failed
  register: app_logs

- name: Display application logs on failure
  ansible.builtin.debug:
    var: app_logs.stdout_lines
  when: health_check is failed